terminal String ID, LPAREN, RPAREN, EQUAL, SEMI, PLUS, MULTI;
terminal Integer NUMBER;

non terminal Program program;
non terminal Assignment assignment;
non terminal Statement statement;
non terminal Expr expr;

precedence left PLUS;
precedence left MULTI;

program ::= statement:e {: RESULT = new Program(e); :}
	| statement:e1 program:e2 {: RESULT = new Program(e1, e2); :}
	;

statement ::= assignment:e SEMI {: RESULT = e; :}
	;

assignment ::= ID:e1 EQUAL expr:e2 {: RESULT = new Assignment(e1, e2); :}
	;

expr ::= expr:e1 PLUS:e expr:e2 {: RESULT = new Expr(e1, e2, e); :}
	| expr:e1 MULTI:e expr:e2 {: RESULT = new Expr(e1, e2, e); :}
	| LPAREN expr:e RPAREN {: RESULT = e; :}
	| NUMBER:e {: RESULT = new Expr(e); :}
	| ID:e {: RESULT = new Expr(e); :}
	;


